queue:
  name: Hosted Ubuntu 1604


variables:
  tfstate_key: 'jimpaine.emotion-checker.master.tfstate'
  resource_name: 'emotionchecker'
  
steps:

- script: |
   terraform init \
       -backend-config="resource_group_name=$(tfstate_resource_group)" \
       -backend-config="storage_account_name=$(tfstate_storage_account)" \
       -backend-config="container_name=$(tfstate_container)" \
       -backend-config="key=$(tfstate_key)" \
       -backend-config="access_key=$(tfstate_access_key)"

  workingDirectory: ./env
  displayName: 'Terraform init'


- script: |
   terraform apply -auto-approve \
       -var "subscription_id=$(subscription_id)" \
       -var "resource_name=$(resource_name)" \
       -var "client_id=$(client_id)" \
       -var "client_secret=$(client_secret)" \
       -var "tenant_id=$(tenant_id)"

  workingDirectory: ./env
  displayName: 'Terraform apply'


- task: DotNetCoreCLI@2
  displayName: 'Build Function'
  inputs:
    command: publish
    publishWebProjects: false
    projects: './src/ImageProcessor/ImageProcessor.csproj'
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'    
    zipAfterPublish: false
    modifyOutputPath: false

- script: |
   blob_path=terraform output -json primary_blob_endpoint
   blob_path=jq '.value' $blob_path
   blob_path=tr -d '"' $blob_path
   
   container="proxy"
   
   sed -i "s|{bloblocation}|$blob_path$container|g" ../src/Proxy/proxies.json

  workingDirectory: ./env
  displayName: 'Update proxies'


- task: CopyFiles@2
  displayName: 'Include proxies.json in publish artifact'
  inputs:
    SourceFolder: ./src/Proxy/proxies.json
    TargetFolder: ./src/ImageProcessor/bin/Release/netstandard2.0/publish/


- script: |
   connectionstring= terraform output -json primary_connection_string
   connectionstring= jq '.value' $connectionstring
   connectionstring= tr -d '"' $connectionstring
   
   fileendpoint= terraform output -json file_endpoint
   fileendpoint= jq '.value' $fileendpoint
   fileendpoint= tr -d '"' $fileendpoint
   
   functionname= terraform output -json function_name
   functionname=  jq '.value' $functionname
   functionname= tr -d '"' $functionname
   
   resourcegroup= terraform output -json resource_group
   resourcegroup= jq '.value' $resourcegroup
   resourcegroup= tr -d '"' $resourcegroup
   
   az functionapp stop \
       --name $functionname \
       --resource-group $resourcegroup
   
   az storage file delete-batch \
       --source "$fileendpoint$functionname-content" \
       --connection-string $connectionstring
   
   az storage file upload-batch \
       --destination "$fileendpoint$functionname-content" \
       --source ../src/ImageProcessor/bin/Release/netstandard2.0/publish/ \
       --destination-path "site/wwwroot" \
       --connection-string $connectionstring
   
   az storage blob upload \
       --container-name "proxy" \
       --file ../src/Proxy/index.html \
       --name "index.html" \
       --connection-string $connectionstring
   
   az functionapp start \
       --name $functionname \
       --resource-group $resourcegroup 

  workingDirectory: ./env
  displayName: Publish
