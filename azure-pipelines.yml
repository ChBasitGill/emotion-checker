queue:
  name: Hosted Ubuntu 1604


variables:
  tfstate_key: 'jimpaine.emotion-checker.master.tfstate'
  resource_name: 'poldemo'
  face_api_instances: '5'
  
steps:

- script: |
   terraform init \
       -backend-config="resource_group_name=$(tfstate_resource_group)" \
       -backend-config="storage_account_name=$(tfstate_storage_account)" \
       -backend-config="container_name=$(tfstate_container)" \
       -backend-config="key=$(tfstate_key)" \
       -backend-config="access_key=$(tfstate_access_key)"

  workingDirectory: ./env
  displayName: 'Terraform init'


- script: |
   terraform apply -auto-approve \
       -var "subscription_id=$(subscription_id)" \
       -var "resource_name=$(resource_name)" \
       -var "client_id=$(client_id)" \
       -var "client_secret=$(client_secret)" \
       -var "tenant_id=$(tenant_id)" \
       -var "face_api_instances=$(face_api_instances)"

  workingDirectory: ./env
  displayName: 'Terraform apply'

- bash: |
   blob_path=$(terraform output -json primary_blob_endpoint | jq '.value' | tr -d '"')   
   container="proxy"   
   sed -i "s|{bloblocation}|$blob_path$container|g" ../src/ImageProcessor/proxies.json
  workingDirectory: ./env
  displayName: 'Transform proxies'

- task: DotNetCoreCLI@2
  displayName: 'Build Function'
  inputs:
    command: publish
    publishWebProjects: false
    projects: './src/ImageProcessor/ImageProcessor.csproj'
    arguments: '--configuration Release --output $(build.artifactstagingdirectory)'    
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

- bash: |
   connectionstring=$(terraform output -json primary_connection_string | jq '.value' | tr -d '"')   
   fileendpoint=$(terraform output -json file_endpoint | jq '.value' | tr -d '"')   
   functionname=$(terraform output -json function_name | jq '.value' | tr -d '"')   
   resourcegroup=$(terraform output -json resource_group | jq '.value' | tr -d '"')
   
   az login \
        --service-principal \
        -u $(app_url) \
        -p $(client_secret) \
        --tenant $(tenant_id)

   az functionapp stop \
       --name $functionname \
       --resource-group $resourcegroup
   
   az storage file delete-batch \
       --source "$fileendpoint$functionname-content" \
       --connection-string $connectionstring
   
   az storage file upload-batch \
       --destination "$fileendpoint$functionname-content" \
       --source $(build.artifactstagingdirectory) \
       --destination-path "site/wwwroot" \
       --connection-string $connectionstring
   
   az storage blob upload \
       --container-name "proxy" \
       --file ../src/Proxy/index.html \
       --name "index.html" \
       --connection-string $connectionstring
   
   az functionapp start \
       --name $functionname \
       --resource-group $resourcegroup 

  workingDirectory: ./env
  displayName: Publish
